Документация:

Содержание:
1) Назначение
2) Функционал
3) Версии

1) Назначение:
Автоматический парсер, опирающийся на открытый API YFinance, периодически обновляющий данные по котировкам ценных бумаг для Telegram-бот-а Greenery
Подробнее о проекте Greenery: https://docs.google.com/document/d/1fD6wRKxq_Si3FtqiH2rzUFezptc3Bh27fNriNu_mOj8/edit
Подробнее об YFinance: (https://pypi.org/project/yfinance/)

2) Функционал: 
Раз в tick_seconds(текущее значение: 1) секунд автопарсер собирает информацию о запросах пользователей из файла current_requests.csv в формате: <название ценной бумаги на сайте https://finance.yahoo.com/>,<число запросов>
Если такого файла нет, автопарсер ничего не делает.

Файл обрабатывается построчно, начиная со 2 строки:
Для начала проверяется, прошло ли достаточно времени(30 секунд) с прошлого обновления данным по акции(если такое было).

Если времени прошло недостаточно, переходим к следующей акции.
Если времени прошло достаточно:
По каждой ценной бумаге проверяется, есть ли файл с текущими данными по ней. 
Формат названия файла: current_<название-акции>.csv
Если такой файл есть, данные из него сохраняются в истории:
Формат названия файла: history_<название-акции>.csv
Проверяется есть ли файл с данными истории по этой акции(если нет, то он создается)
Все данные из текущей информации переписываются в файл с историей.

Далее, делается запрос по котировкам ценной бумаги на протяжении period_of_import(текущее значение: 60 минут) с периодичностью import_interval(текущее значение: 5 минут) 
Данные сохраняются в pandas dataframe со столбцами:
Datetime, Open, High, Low, Close, Adj Close, Volume

Значения столбцов:
Datetime - промежуток, на котором рассматривается цена.
Open - цена на начало промежутка
High - максимальная цена за промежуток
Low - минимальная цена за промежуток
Close - цена на конец промежутка
Adj Close - технический параметр, дублирующий цену на конец промежутка. Нужен для обработки некорректных данных.
Volume - объем тогров

Полученные данные выгружаются в файл current_<название-ценной-бумаги>.csv с текущими котировками по данной бумаге.
Информация по запросам в обезличенном виде <Момент запуска текущего обновления цен>,<название ценной бумаги на сайте https://finance.yahoo.com/>,<число запросов> записывается в файл requests_stats.csv(если такого файла нет, он создается)
Сохраняется время обновления файла с данными по текущей ценной бумаге.

После обработки всех акций файл current_requests.csv с текущими пользовательскими запросами удаляется.

3) Версии:
alpha version 0.0.1) Создан автопарсер обновляющий информацию раз в 30 секунд информацию на основе пользовательских запросов.
alpha version 0.0.2) Добавлена система сбора истории в один файл по каждой ценной бумаге, автоматическая обработка случаев 
отсутствия файла с запросами, истории по ценным бумагам. 
alpha version 0.0.3(текущая)) Изменена логика автопарсера: добавлена проверка, что прошло достаточно времени с прошлого запроса по акции, если он был, итерации запускаются с интервалом в секунду. Это позволит получать информацию по акциям, по которым не было ранее запросов за несколько секунд, а не >30, как изначально.
Встроен логгер.

Планы на ближайшие обновления:
*)Расширить систему логгирования
*)Создать проверку корректности названия ценной бумаги
*)При проверке, нужно ли обновлять акцию добавить условие на то, что прошло достаточное количество времени с последнего обновления данных по акции, при котором появилась новая информация
*)Улучшить сохранение информации в истории с использованием бинпоиска, чтобы в истории не хранилось несколько записей по одной и той же дате
